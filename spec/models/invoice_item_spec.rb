require 'rails_helper'

RSpec.describe InvoiceItem, type: :model do
  describe 'relationships' do

    it {should belong_to(:item)}
    it {should belong_to(:invoice)}

  end

  describe 'enums' do
    it 'response to status methods' do
      customer = Customer.create!(first_name: "Gunther", last_name: "Guyman")
      invoice = Invoice.create!(customer_id: customer.id, status: 0)
      merchant = Merchant.create!(name: "Phrank")
      item = Item.create!(name: "Cool Pencil", description: "See name", unit_price: 5000, merchant_id: merchant.id)
      invoice_item = InvoiceItem.create!(invoice_id: invoice.id, item_id: item.id, quantity: 2, unit_price: item.unit_price, status: 0)

      expect(invoice_item.pending?).to eq(true)

      invoice_item.shipped!
      expect(invoice_item.pending?).to eq(false)
    end
  end

  describe 'instance methods' do
    describe '.item_name' do
      it 'returns the name of the associated item' do
        invoice_item = create(:invoice_item)

        expect(invoice_item.item_name).to eq(invoice_item.item.name)
      end

      it 'returns the date thats its invoice was created' do
        invoice_item = create(:invoice_item)

        expect(invoice_item.invoice_date).to eq(invoice_item.invoice.created_at)
      end
    end
  end

  describe 'class methods' do
    before :each do
      @invoice = create(:invoice)
      @invoice_item_1 = create(:invoice_item, quantity: 15, unit_price: 15000, invoice: @invoice)
      @invoice_item_2 = create(:invoice_item, quantity: 8, unit_price: 6000)
      @invoice_item_3 = create(:invoice_item, quantity: 7, unit_price: 1375, invoice: @invoice)
      @invoice_item_4 = create(:invoice_item, quantity: 4, unit_price: 1825)
    end

    describe '#total_revenue' do
      it 'returns the total revenue generated by all or a subset of invoice_items' do
        expect(InvoiceItem.total_revenue).to eq(289925)
        expect(@invoice.invoice_items.total_revenue).to eq(234625)
      end
    end
  end
end
